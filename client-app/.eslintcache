[{"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\reportWebVitals.ts":"1","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx":"2","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"3","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\index.tsx":"4","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"5","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"6","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"7","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"8","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"9","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"10","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"11","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"12","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"13","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"14","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"15","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"16","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"17","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"18","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"19","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx":"20","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx":"21","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx":"22","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"23"},{"size":440,"mtime":1606226356533,"results":"24","hashOfConfig":"25"},{"size":629,"mtime":1607355385340,"results":"26","hashOfConfig":"25"},{"size":3918,"mtime":1607355385342,"results":"27","hashOfConfig":"25"},{"size":931,"mtime":1607469780768,"results":"28","hashOfConfig":"25"},{"size":296,"mtime":1607355385341,"results":"29","hashOfConfig":"25"},{"size":1616,"mtime":1607355385340,"results":"30","hashOfConfig":"25"},{"size":747,"mtime":1607355385349,"results":"31","hashOfConfig":"25"},{"size":774,"mtime":1607355385348,"results":"32","hashOfConfig":"25"},{"size":1560,"mtime":1607355385346,"results":"33","hashOfConfig":"25"},{"size":4335,"mtime":1607469224105,"results":"34","hashOfConfig":"25"},{"size":873,"mtime":1607355385344,"results":"35","hashOfConfig":"25"},{"size":334,"mtime":1607355385340,"results":"36","hashOfConfig":"25"},{"size":1752,"mtime":1607466940163,"results":"37","hashOfConfig":"25"},{"size":1829,"mtime":1607355385345,"results":"38","hashOfConfig":"25"},{"size":1875,"mtime":1607355385346,"results":"39","hashOfConfig":"25"},{"size":908,"mtime":1607355385344,"results":"40","hashOfConfig":"25"},{"size":1407,"mtime":1607355385346,"results":"41","hashOfConfig":"25"},{"size":1845,"mtime":1607355385339,"results":"42","hashOfConfig":"25"},{"size":1201,"mtime":1607355385345,"results":"43","hashOfConfig":"25"},{"size":765,"mtime":1607468144238,"results":"44","hashOfConfig":"25"},{"size":771,"mtime":1607468922622,"results":"45","hashOfConfig":"25"},{"size":775,"mtime":1607469004601,"results":"46","hashOfConfig":"25"},{"size":359,"mtime":1607469205845,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"11dzmpf",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],["97","98"],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\index.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["99","100","101","102"],"import React, { FormEvent, useContext, useEffect, useState } from \"react\";\r\nimport { Button, Form, Grid, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ActivityStore from \"../../../app/stores/activityStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport TextInput from \"../../../app/common/form/TextInput\";\r\nimport { TextAreaInput } from \"../../../app/common/form/TextAreaInput\";\r\nimport { SelectInput } from \"../../../app/common/form/SelectInput\";\r\nimport { category } from \"../../../app/common/options/categoryOptions\";\r\ninterface IDetailParams {\r\n  id: string;\r\n}\r\nconst ActivityForm: React.FC<RouteComponentProps<IDetailParams>> = ({\r\n  match,\r\n  history,\r\n}) => {\r\n  const activityStore = useContext(ActivityStore);\r\n  const {\r\n    createActivity,\r\n    editActivity,\r\n    submitting,\r\n    activity: initialFormState,\r\n    loadActivity,\r\n    clearActivity,\r\n  } = activityStore;\r\n\r\n  const [activity, setActivity] = useState<IActivity>({\r\n    id: \"\",\r\n    title: \"\",\r\n    category: \"\",\r\n    description: \"\",\r\n    date: \"\",\r\n    city: \"\",\r\n    venue: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (match.params.id && activity.id.length === 0) {\r\n      loadActivity(match.params.id).then(\r\n        () => initialFormState && setActivity(initialFormState)\r\n      );\r\n    }\r\n    return () => {\r\n      clearActivity();\r\n    };\r\n  }, [\r\n    loadActivity,\r\n    clearActivity,\r\n    match.params.id,\r\n    initialFormState,\r\n    activity.id.length,\r\n  ]);\r\n\r\n  // const handleSubmit = () => {\r\n  //   if (activity.id.length === 0) {\r\n  //     let newActivity = {\r\n  //       ...activity,\r\n  //       id: uuid(),\r\n  //     };\r\n  //     createActivity(newActivity).then(() =>\r\n  //       history.push(`/activities/${newActivity.id}`)\r\n  //     );\r\n  //   } else {\r\n  //     editActivity(activity).then(() =>\r\n  //       history.push(`/activities/${activity.id}`)\r\n  //     );\r\n  //   }\r\n\r\n  //   console.log(activity);\r\n  // };\r\n\r\n  const handleFinalFormSubmit = (values: any) => {\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <Segment clearing>\r\n          <FinalForm\r\n            onSubmit={handleFinalFormSubmit}\r\n            render={({ handleSubmit }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <Field\r\n                  name=\"title\"\r\n                  placeholder=\"Title\"\r\n                  value={activity.title}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"description\"\r\n                  placeholder=\"Description\"\r\n                  value={activity.description}\r\n                  component={TextAreaInput}\r\n                  rows={3}\r\n                />\r\n                <Field\r\n                  name=\"category\"\r\n                  options={category}\r\n                  placeholder=\"Category\"\r\n                  value={activity.category}\r\n                  component={SelectInput}\r\n                />\r\n                <Field\r\n                  name=\"date\"\r\n                  placeholder=\"Date\"\r\n                  value={activity.date}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"city\"\r\n                  placeholder=\"City\"\r\n                  value={activity.city}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"venue\"\r\n                  placeholder=\"Venue\"\r\n                  value={activity.venue}\r\n                  component={TextInput}\r\n                />\r\n                <Button\r\n                  loading={submitting}\r\n                  floated=\"right\"\r\n                  positive\r\n                  type=\"submit\"\r\n                  content=\"Submit\"\r\n                />\r\n                <Button\r\n                  onClick={() => history.push(\"/activities\")}\r\n                  floated=\"right\"\r\n                  type=\"button\"\r\n                  content=\"Cancel\"\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["103"],"import axios, { AxiosResponse } from 'axios';\r\nimport { IActivity } from '../models/activity';\r\nimport {history} from '../..'; //\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\naxios.interceptors.response.use(undefined, error => {\r\n    if(error.message === 'Network Error' && !error.response) {\r\n        toast.error('Network error - make sure API is running!');\r\n    }\r\n    const {status, data, config} = error.response;\r\n    if(status === 404) {\r\n        history.push('/notfound');\r\n    }\r\n    if(status === 400 && config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n        history.push('/notfound');\r\n    }\r\n    if(status === 500) {\r\n        toast.error('Server error - check the terminal for more info!');\r\n    }\r\n    console.log(error.response);\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody)\r\n}\r\n\r\nconst Activities = {\r\n    list: (): Promise<IActivity[]> => requests.get('/activities'),\r\n    details: (id: string) => requests.get(`/activities/${id}`),\r\n    create: (activity: IActivity) => requests.post('/activities', activity),\r\n    update: (activity: IActivity) => requests.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del(`/activities/${id}`)\r\n}\r\n\r\nexport default { Activities }\r\n","C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx",[],"C:\\users\\brand\\source\\repos\\Udemy\\NetCoreReact\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"112","line":4,"column":16,"nodeType":"110","messageId":"111","endLine":4,"endColumn":20},{"ruleId":"108","severity":1,"message":"113","line":22,"column":5,"nodeType":"110","messageId":"111","endLine":22,"endColumn":19},{"ruleId":"108","severity":1,"message":"114","line":23,"column":5,"nodeType":"110","messageId":"111","endLine":23,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":45,"column":1,"nodeType":"117","endLine":45,"endColumn":30},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"@typescript-eslint/no-unused-vars","'FormEvent' is defined but never used.","Identifier","unusedVar","'uuid' is defined but never used.","'createActivity' is assigned a value but never used.","'editActivity' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]